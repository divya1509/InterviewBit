public class Solution {
    // DO NOT MODIFY THE LIST. IT IS READ ONLY
    
    public static int count(int n){
        int ans =0;
        while(n>0){
            // if(n%2==0) ans++;
            // n/=2;
            ans+= n&1;
            n>>=1;
        }
        
        // System.out.println(ans);
        
        return ans;
    }
    
    public int hammingDistance(final List<Integer> A) {
        int ans=0, mod= 1000000007;
        // for(int i=0; i<A.size(); i++){
        //     for(int j=i+1; j<A.size(); j++){
        //         // System.out.println(ans);
        //         ans= (ans+(count(A.get(i)^A.get(j))%mod )*2)%mod;
        //     }
        // }
        // return ans;
        
        int one= 0, zero=0;
        for (int j = 0; j< 32; j++){
            one = 0;
            zero = 0;

            for (int i = 0; i< A.size(); i++){
                if (A.get(i )< 0) continue;
                if (1 == A.size())  break;    
                if (((A.get(i) >> j) & 1)!=0){
                    one++;
                }
                else{
                    zero++;
                }
            }
            ans= (ans+ (one*zero)%mod)%mod;
        }
        return (ans*2)%mod;
        
        
    }
}
