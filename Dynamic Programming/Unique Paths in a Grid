public class Solution {
    public int uniquePathsWithObstacles(ArrayList<ArrayList<Integer>> A) {
        
        int m = A.size(), n = A.get(0).size();
        if(A.get(m - 1).get(n - 1) == 1 || A.get(0).get(0) == 1) return 0;
        
        int[][] dp = new int[m][n];
        
        for (int i = m - 1; i >= 0; i--) {
            for (int j = n - 1; j >= 0; j--) {
                if (i == m - 1 && j == n - 1) {
                    dp[i][j] = 1;
                }
                else if(i == m - 1) {
                    if(A.get(i).get(j) == 0 && dp[i][j + 1] != 0) dp[i][j] = 1;
                }
                else if(j == n - 1) {
                    if(A.get(i).get(j) == 0 && dp[i + 1][j] != 0) dp[i][j] = 1;
                }
                else {
                    if(A.get(i).get(j) == 0) {
                        if(dp[i + 1][j] != 0) dp[i][j] += dp[i + 1][j];
                        if(dp[i][j + 1] != 0) dp[i][j] += dp[i][j + 1];
                    }
                }
            }
        }
        
        return dp[0][0];
    }
}
