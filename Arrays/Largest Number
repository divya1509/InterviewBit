// public class Solution {
//     // DO NOT MODIFY THE LIST. IT IS READ ONLY
//     public String largestNumber(final List<Integer> A) {
        
//         ArrayList<String> arr = new ArrayList<>();
//         for(int i=0; i<A.size(); i++ ) arr.add("" + A.get(i));
        
//         Collections.sort( arr, new Comparator<String>(){
//             public int compare( String a, String b ){
//                 return (a+b).compareTo(b+a);
//             }
//         } );
        
//         String ans = "";
//         for(int i=0; i<arr.size(); i++ ) ans= arr.get(i) + ans;
        
//         if(ans.charAt(0)=='0') return "0";
//         return ans;
        
//     }
// }


public class Solution {
    // DO NOT MODIFY THE LIST
    public String largestNumber(final List<Integer> a) {
    
    String[] arr = new String[a.size()];
    for (int i = 0; i < a.size(); i++) {
        arr[i] = String.valueOf(a.get(i));
    }
    
    
    Arrays.sort(arr, new Comparator<String>(){
        public int compare(String a, String b){
            return (b+a).compareTo(a+b);
        }
    });
    
 
    StringBuilder sb = new StringBuilder();
    for(String s: arr){
        sb.append(s);
    }
 
    if(sb.charAt(0) == '0'){     //check if all zeroes are there
        return String.valueOf(0);
    }
    
    return sb.toString();   
    }
}

