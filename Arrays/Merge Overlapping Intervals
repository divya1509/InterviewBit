/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public ArrayList<Interval> merge(ArrayList<Interval> intervals) {
        Collections.sort(intervals,new Comparator<Interval>(){ 
            public int compare(Interval i1,Interval i2) 
            { 
                return i1.start - i2.start; 
            } 
        }); 
        
        // for(int j=0; j<intervals.size(); j++ ) {
        //     Interval p= intervals.get(j);
        //     System.out.println(p.start + " " + p.end);
        // }
        
        int os, oe, i=1;
        ArrayList<Interval> ans= new ArrayList<>();
        
        Interval curr= intervals.get(0);
        os= curr.start;
        oe = curr.end;
        
        while( i<intervals.size() ){
            curr= intervals.get(i);
            if( curr.start<=oe ) oe= Math.max(oe, curr.end);
            else {
                ans.add( new Interval(os, oe) );
                os= curr.start;
                oe= curr.end;
            }
            i++;
        }
        ans.add( new Interval(os, oe) );
        
        return ans;
    }
}
