public class Solution {
    private static void sol(ArrayList<ArrayList<Integer>> ans, ArrayList<Integer> temp, 
                    ArrayList<Integer> A, boolean[] visited){
        
        if(temp.size() == A.size()) {
            ans.add(new ArrayList<Integer>(temp));
            return;
        }
        
        for(int i = 0; i < A.size(); i++) {
            if(!visited[i]){
                visited[i] = true;
                temp.add(A.get(i));
                sol(ans, temp, A, visited);
                temp.remove(temp.size() - 1);
                visited[i] = false;
            }
        }
    } 
    
    public ArrayList<ArrayList<Integer>> permute(ArrayList<Integer> A) {
        ArrayList<ArrayList<Integer>> ans = new ArrayList<>();
        ArrayList<Integer> temp = new ArrayList<>();
        boolean[] visited = new boolean[A.size()];
        Collections.sort(A);
        sol(ans, temp, A, visited);
        return ans;
    }
}
