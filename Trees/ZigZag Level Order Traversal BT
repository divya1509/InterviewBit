/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    public ArrayList<ArrayList<Integer>> zigzagLevelOrder(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        ArrayList<ArrayList<Integer>> ans = new ArrayList<>();
        if(root == null) return ans;
        q.add(root);
        
        while(q.size() > 0) {
            int size = q.size();
            ArrayList<Integer> temp = new ArrayList<>();
            while(size-- > 0) {
                TreeNode curr = q.poll();
                temp.add(curr.val);
                if(curr.left != null) q.add(curr.left);
                if(curr.right != null) q.add(curr.right);
            }
            ans.add(temp);
        }
        
        for(int i = 0; i < ans.size(); i++) {
            if(i % 2 == 1) {
                Collections.reverse(ans.get(i));
            }
        }
        return ans;
    }
}
