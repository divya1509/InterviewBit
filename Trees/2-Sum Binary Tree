/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    private static void inorder(TreeNode root, ArrayList<Integer> arr) {
        if(root.left != null) inorder(root.left, arr);
        arr.add(root.val);
        if(root.right != null) inorder(root.right, arr);
    }
    
    public int t2Sum(TreeNode A, int B) {
        if(A == null) return 0;
        
        ArrayList<Integer> arr = new ArrayList<>();
        inorder(A, arr);
        int i = 0, j = arr.size() - 1;
        while (i < j) {
            if(arr.get(i) + arr.get(j) == B) return 1;
            else if(arr.get(i) + arr.get(j) > B) j--;
            else i++;
        }
        return 0;
    }
}
