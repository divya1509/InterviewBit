/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    public ArrayList<Integer> solve(TreeNode A) {
        Queue<TreeNode> q = new LinkedList<>();
        ArrayList<Integer> ans = new ArrayList<>();
        if(A == null) return ans;
        
        q.add(A);
        while (q.size() > 0) {
            TreeNode curr = q.poll();
            ans.add(curr.val);
            if(curr.right != null) q.add(curr.right);
            if(curr.left != null) q.add(curr.left);
        }
        
        Collections.reverse(ans);
        return ans;
    }
}
