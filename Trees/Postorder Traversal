/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    
    
    public ArrayList<Integer> postorderTraversal(TreeNode A) {
        ArrayList<Integer> ans = new ArrayList<>();
        
        Stack<TreeNode> s = new Stack<>();
        s.push(A);
        while (s.size() > 0) {
            TreeNode curr = s.pop();
            ans.add(curr.val);
            if(curr.left != null) s.push(curr.left);
            if(curr.right != null) s.push(curr.right);
        }
        Collections.reverse(ans);
        return ans;
    }
}
