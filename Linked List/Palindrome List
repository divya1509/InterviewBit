/**
 * Definition for singly-linked list.
 * class ListNode {
 *     public int val;
 *     public ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
public class Solution {
    public int lPalin(ListNode A) {
        
        if(A== null || A.next==null) return 1;
        
        if(A.next.next==null) {
            if(A.val == A.next.val ) return 1;
            return 0;
        }
        
        ListNode slow= A, fast= A;
        while(fast!= null && fast.next!=null && fast.next.next!=null){
            slow= slow.next;
            fast= fast.next.next;
        }
        
        ListNode prev = null, curr= slow.next; 
        slow.next= null;
        
        while(curr!=null){
            ListNode fut = curr.next;
            curr.next = prev;
            prev = curr; 
            curr= fut;
        }
        
        while(prev!=null && A!=null){
            if(prev.val != A.val) return 0;
            prev= prev.next;
            A= A.next;
        }
        return 1;
        
    }
}
