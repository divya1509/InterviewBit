/**
 * Definition for singly-linked list.
 * class ListNode {
 *     public int val;
 *     public ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
public class Solution {
    public ListNode rotateRight(ListNode A, int B) {
        int size = 0;
        ListNode curr = A;
        while (curr != null) {
            size++;
            curr = curr.next;
        }
        
        B = B % size;
        if(B == 0) return A;
        
        ListNode slow = A, fast = A;
        while (B -- > 0) {
            fast = fast.next;
        }
        
        while (fast.next != null) {
            slow = slow.next;
            fast = fast.next;
        }
        
        curr = slow.next;
        slow.next = null;
        fast.next = A;
        return curr;
        
    }
}
