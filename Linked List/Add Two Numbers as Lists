/**
 * Definition for singly-linked list.
 * class ListNode {
 *     public int val;
 *     public ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int carry=0, rem=0;
        ListNode head= null, curr= null;
        
        while(l1!=null && l2!=null){
            rem= l1.val + l2.val + carry;
            carry= rem/10;
            rem%=10;
            ListNode temp= new ListNode(rem);
            if(head==null){
                head= temp;
            }else if(curr==null){
                curr= temp;
                head.next= curr;
            }else{
                curr.next= temp;
                curr= curr.next;
            }
            l1= l1.next;
            l2=l2.next;
        }
        
        while(l1!=null){
            rem= l1.val+ carry;
            carry= rem/10;
            rem%=10;
            ListNode temp= new ListNode(rem);
            if(head==null){
                head= temp;
            }else if(curr==null){
                curr= temp;
                head.next= curr;
            }else{
                curr.next= temp;
                curr= curr.next;
            }
            l1= l1.next;
        }
        
        while(l2!=null){
            rem= + l2.val + carry;
            carry= rem/10;
            rem%=10;
            ListNode temp= new ListNode(rem);
            if(head==null){
                head= temp;
            }else if(curr==null){
                curr= temp;
                head.next= curr;
            }else{
                curr.next= temp;
                curr= curr.next;
            }
            l2= l2.next;
        }
        
        if(carry!=0){
            ListNode temp= new ListNode(carry);
            if(curr!=null) curr.next= temp;
            else {
                curr= temp;
                head.next= curr;
            }
        }
        
        return head;
    }
}
